# -*- coding: utf-8 -*-
"""Diabetes_Linear_Model_Agisha.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1n6NszrydrDaZQbr6oPHpV5v_YW0UbKJj

# Import Library
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

from sklearn import datasets, linear_model
from sklearn.linear_model import LinearRegression

"""# Load Dataset"""

from sklearn.datasets import load_diabetes
diabetes = datasets.load_diabetes()

diabetes

#ada data, target, feature_names
#data itu yg data train
#target itu yg outputnya gt gak si?

"""# EDA First Model"""

#coba liat terpisah biar ena diliat
X = diabetes.data
Y = diabetes.target

X

Y

#cek X size X object
#442 row 10 columns

#cek Y size 
#442 outputs 
#Buat yang X itu -> 442 row dan 10 colums
print(X.shape)
print(Y.shape)

df = pd.DataFrame(X)
dfa = pd.DataFrame(X)

# Feature names datanya niw
diabetes.feature_names

df.columns = diabetes.feature_names
df #liat indexnya berdasarkan feature namesnya

sns.pairplot(df)

# Cek korelasi first Model
sns.heatmap(df.corr())

sns.distplot(df['age'])

"""# Prepocessing With Standard Scaller"""

from sklearn import preprocessing
from sklearn.preprocessing import StandardScaler

scaler_agi = StandardScaler(with_mean=False)
scaler.fit(dfa)
X = scaler.transform(dfa)
dfa

"""## EDA After Prepocessing"""

sns.distplot(dfa['age'])

"""# Training First Model"""

from sklearn import model_selection
X_train, X_test, Y_train, Y_test = model_selection.train_test_split(X, Y)
# Udh di split ni

print(X_train.shape)
print(X_test.shape)
print(Y_train.shape)
print(Y_test.shape)
# Print shapenya masing-masing

"""# Create First Model"""

# Buat obj reg_agi
reg_agi = linear_model.LinearRegression()

# Training cuy, masukin ke obj reg_agi
reg_agi.fit(X_train, Y_train)

# Buat prediksi ke X_test, nanti di save di Y_pred
Y_pred = reg_agi.predict(X_test)

# Print predicted Valuenya
Y_pred

"""## Output"""

# Buat perbandingan pake grafik yg scatter cuy

x_line = np.arange(0, 350, 1)
plt.plot(x_line, "r")
plt.scatter(Y_pred, Y_test)

plt.ylabel('Label Asli')
plt.xlabel('Label Prediksi')

plt.grid()
plt.show()